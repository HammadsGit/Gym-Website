"""upgrade

Revision ID: 26259a8d94c1
Revises: 
Create Date: 2023-05-01 13:29:41.958772

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '26259a8d94c1'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('account',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('firstname', sa.String(length=50), nullable=True),
    sa.Column('surname', sa.String(length=50), nullable=True),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('password', sa.String(length=200), nullable=False),
    sa.Column('facebookid', sa.String(length=200), nullable=True),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('dob', sa.DateTime(), nullable=False),
    sa.Column('generatedPassword', sa.Boolean(), nullable=True),
    sa.Column('accountType', sa.Enum('User', 'Employee', 'Manager', name='accounttype'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('facebookid'),
    sa.UniqueConstraint('username')
    )
    with op.batch_alter_table('account', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_account_firstname'), ['firstname'], unique=False)
        batch_op.create_index(batch_op.f('ix_account_surname'), ['surname'], unique=False)

    op.create_table('activity',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.Column('length', sa.Integer(), nullable=True),
    sa.Column('capacity', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('activity', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_activity_name'), ['name'], unique=False)

    op.create_table('facility',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('capacity', sa.Integer(), nullable=True),
    sa.Column('opens', sa.Numeric(precision=2, scale=2), nullable=True),
    sa.Column('closes', sa.Numeric(precision=2, scale=2), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('facility', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_facility_name'), ['name'], unique=False)

    op.create_table('membership_prices',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('price', sa.Numeric(precision=3, scale=2), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('activity_location',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('facilityId', sa.Integer(), nullable=True),
    sa.Column('activityId', sa.Integer(), nullable=True),
    sa.Column('startDay', sa.Integer(), nullable=True),
    sa.Column('startTime', sa.Numeric(precision=2, scale=2), nullable=True),
    sa.ForeignKeyConstraint(['activityId'], ['activity.id'], ),
    sa.ForeignKeyConstraint(['facilityId'], ['facility.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('address',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('accountId', sa.Integer(), nullable=True),
    sa.Column('line1', sa.String(length=200), nullable=True),
    sa.Column('line2', sa.String(length=200), nullable=True),
    sa.Column('line3', sa.String(length=200), nullable=True),
    sa.Column('city', sa.String(length=100), nullable=True),
    sa.Column('postcode', sa.String(length=100), nullable=True),
    sa.Column('country', sa.String(length=100), nullable=True),
    sa.Column('phone', sa.String(length=100), nullable=True),
    sa.CheckConstraint('NOT(accountId IS NULL)'),
    sa.ForeignKeyConstraint(['accountId'], ['account.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('receipt',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('accountId', sa.Integer(), nullable=True),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('discountPct', sa.Integer(), nullable=True),
    sa.Column('itemName', sa.String(length=100), nullable=False),
    sa.Column('itemCount', sa.Integer(), nullable=False),
    sa.Column('refundedItemCount', sa.Integer(), nullable=False),
    sa.Column('itemPrice', sa.Numeric(precision=3, scale=2), nullable=False),
    sa.Column('stripePaymentIntentId', sa.String(length=100), nullable=True),
    sa.ForeignKeyConstraint(['accountId'], ['account.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('booking',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('accountId', sa.Integer(), nullable=True),
    sa.Column('activityLocation', sa.Integer(), nullable=True),
    sa.Column('start', sa.DateTime(), nullable=True),
    sa.Column('end', sa.DateTime(), nullable=True),
    sa.Column('teamBooking', sa.Boolean(), nullable=True),
    sa.Column('receiptId', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['accountId'], ['account.id'], ),
    sa.ForeignKeyConstraint(['activityLocation'], ['activity_location.id'], ),
    sa.ForeignKeyConstraint(['receiptId'], ['receipt.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('membership',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('accountId', sa.Integer(), nullable=True),
    sa.Column('entryType', sa.Integer(), nullable=False),
    sa.Column('count', sa.Integer(), nullable=True),
    sa.Column('startDate', sa.DateTime(), nullable=True),
    sa.Column('endDate', sa.DateTime(), nullable=True),
    sa.Column('bookedActivity', sa.Integer(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('cancellationReason', sa.String(length=100), nullable=True),
    sa.Column('cancellationDate', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['accountId'], ['account.id'], ),
    sa.ForeignKeyConstraint(['bookedActivity'], ['booking.id'], ),
    sa.ForeignKeyConstraint(['entryType'], ['membership_prices.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('membership')
    op.drop_table('booking')
    op.drop_table('receipt')
    op.drop_table('address')
    op.drop_table('activity_location')
    op.drop_table('membership_prices')
    with op.batch_alter_table('facility', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_facility_name'))

    op.drop_table('facility')
    with op.batch_alter_table('activity', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_activity_name'))

    op.drop_table('activity')
    with op.batch_alter_table('account', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_account_surname'))
        batch_op.drop_index(batch_op.f('ix_account_firstname'))

    op.drop_table('account')
    # ### end Alembic commands ###
